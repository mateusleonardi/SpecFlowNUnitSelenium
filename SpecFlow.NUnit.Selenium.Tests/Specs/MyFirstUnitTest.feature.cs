// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlowNUnitSelenium.Tests.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("My First NUnit Test")]
    public partial class MyFirstNUnitTestFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MyFirstUnitTest.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "My First NUnit Test", "Para que possamos fazer nosso primeiro NUnit Test\r\nComo um developer\r\nEu preciso " +
                    "garantir que os métodos de pré e pós testes estejam funcionando", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Rodar um NUnit de exemplo com sucesso")]
        public virtual void RodarUmNUnitDeExemploComSucesso()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Rodar um NUnit de exemplo com sucesso", ((string[])(null)));
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
testRunner.Given("que eu esteja fazendo meu primeiro NUnit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 9
testRunner.And("desejo validar se o parâmetro \"NUnit is awesome\" está sendo passado com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 10
testRunner.When("confirmo que o parâmetro foi guardado em uma variável", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 11
testRunner.Then("o resultado é positivo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Rodar um NUnit de exemplo sem sucesso")]
        public virtual void RodarUmNUnitDeExemploSemSucesso()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Rodar um NUnit de exemplo sem sucesso", ((string[])(null)));
#line 13
this.ScenarioSetup(scenarioInfo);
#line 14
testRunner.Given("que eu esteja fazendo meu primeiro NUnit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 15
testRunner.And("desejo validar se o parâmetro \"NUnit is awesome yet\" está sendo passado com suces" +
                    "so", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 16
testRunner.When("confirmo que o parâmetro foi guardado em uma variável", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 17
testRunner.Then("o resultado é negativo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
